local plrsforaim = {}
 
local lplr = game:GetService("Players").LocalPlayer
Move.Draggable = true
Gui.ResetOnSpawn = false
Gui.Name = "Chat"
Gui.DisplayOrder = 999
 
Gui.Parent = plrs.LocalPlayer.PlayerGui
 
 
f = {}
local espforlder
 
f.addesp = function()
--print("ESP ran")
if espforlder then
else
espforlder = Instance.new("Folder")
espforlder.Parent = game.Workspace.CurrentCamera
end
for i, v in pairs(espforlder:GetChildren()) do
v:Destroy()
end
for _, plr in pairs(plrs:GetChildren()) do
if plr.Character and plr.Character.Humanoid.Health > 0 and plr.Name ~= lplr.Name then
if TeamBased == true then
if plr.Team.Name ~= plrs.LocalPlayer.Team.Name  then
local e = espforlder:FindFirstChild(plr.Name)
if not e then
local bill                   = Instance.new("BillboardGui", espforlder)
bill.Name                    = plr.Name
bill.AlwaysOnTop             = true
bill.Size                    = UDim2.new(1,0,1,0)
bill.Adornee                 = plr.Character.Head
local Frame                  = Instance.new('Frame',bill)
Frame.Active                 = true
Frame.BackgroundColor3       = Color3.fromRGB(0, 181, 226)
Frame.BackgroundTransparency = 0
Frame.BorderSizePixel        = 0
Frame.AnchorPoint            = Vector2.new(.5, .5)
Frame.Position               = UDim2.new (0.5,0,0.5,0)
Frame.Size                   = UDim2.new (1,1,1,1)
Frame.Rotation               = 0
plr.Character.Humanoid.Died:Connect(function()
bill:Destroy()
end)
end
end
else
local e = espforlder:FindFirstChild(plr.Name)
if not e then
local bill                   = Instance.new("BillboardGui", espforlder)
bill.Name                    = plr.Name
bill.AlwaysOnTop             = true
bill.Size                    = UDim2.new(1,0,1,0)
bill.Adornee                 = plr.Character.Head
local Frame                  = Instance.new('Frame',bill)
Frame.Active                 = true
Frame.BackgroundColor3       = Color3.fromRGB(0, 181, 226)
Frame.BackgroundTransparency = 0
Frame.BorderSizePixel        = 0
Frame.AnchorPoint            = Vector2.new(.5, .5)
Frame.Position               = UDim2.new (0.5,0,0.5,0)
Frame.Size                   = UDim2.new (1, 1, 1)
Frame.Rotation               = 0
plr.Character.Humanoid.Died:Connect(function()
bill:Destroy()
end)
end
end
 
 
end
end
end
local cam     = game.Workspace.CurrentCamera
local CoreGui = game:GetService("StarterGui")

 
local mouse = lplr:GetMouse()
local switch = false
local key = "k"
local aimatpart = nil
mouse.KeyDown:Connect(function(a)
if a == "t" then
print("worked1")
local plr = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera

for i, v in pairs(game.Players:GetChildren()) do


    local Bottom = Drawing.new("Line")
    Bottom.Visible = false
    Bottom.From = Vector2.new(0, 0)
    Bottom.To = Vector2.new(200, 200)
    Bottom.Color = Color3.fromRGB(0, 181, 226)
    Bottom.Thickness = 2
    Bottom.Transparency = 1


    local Right = Drawing.new("Line")
    Right.Visible = false
    Right.From = Vector2.new(0, 0)
    Right.To = Vector2.new(200, 200)
    Right.Color = Color3.fromRGB(0, 181, 226)
    Right.Thickness = 2
    Right.Transparency = 1

    function ESP()
        local connection
        connection = game:GetService("RunService").RenderStepped:Connect(function()
            if v.Character ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v.Name ~= plr.Name  and v.Character.Humanoid.Health > 0 then 
                local ScreenPos, OnScreen = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                if OnScreen then
                    local Scale = v.Character.Head.Size.Y/2
                    local Size = Vector3.new(2, 3, 0) * (Scale * 2)
                    local humpos = camera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
                    local TL = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, Size.Y, 0)).p)
                    local TR = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, Size.Y, 0)).p)
                    local BL = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, 0)).p)
                    local BR = camera:WorldToViewportPoint((v.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, 0)).p)

                    Right.From = Vector2.new(TR.X, TR.Y)
                    Right.To = Vector2.new(BR.X, BR.Y)

                    Bottom.From = Vector2.new(BL.X, BL.Y)
                    Bottom.To = Vector2.new(BR.X, BR.Y)

                    if v.TeamColor == plr.TeamColor then
                        Bottom.Color = Color3.fromRGB(0, 255, 0)
                        Right.Color  = Color3.fromRGB(0, 255, 0)
                    else 
                        Bottom.Color = Color3.fromRGB(0, 181, 226)
                        Right.Color = Color3.fromRGB(0, 181, 226)
                    end

                    Bottom.Visible = true
                    Right.Visible = true
                else 
                    Bottom.Visible = false
                    Right.Visible = false
                end
            else 
                Bottom.Visible = false
                Right.Visible = false
                if game.Players:FindFirstChild(v.Name) == nil then
                    connection:Disconnect()
                end
            end
        end)
    end
    coroutine.wrap(ESP)()
end

game.Players.PlayerAdded:Connect(function(newplr)

    local Bottom        = Drawing.new("Line")
    Bottom.Visible      = false
    Bottom.From         = Vector2.new(0, 0)
    Bottom.To           = Vector2.new(200, 200)
    Bottom.Color        = Color3.fromRGB(0, 181, 226)
    Bottom.Thickness    = 2
    Bottom.Transparency = 1


    local Right        = Drawing.new("Line")
    Right.Visible      = false
    Right.From         = Vector2.new(0, 0)
    Right.To           = Vector2.new(200, 200)
    Right.Color        = Color3.fromRGB(0, 181, 226)
    Right.Thickness    = 2
    Right.Transparency = 1

    function ESP()
        local connection
        connection = game:GetService("RunService").RenderStepped:Connect(function()
            if newplr.Character ~= nil and newplr.Character:FindFirstChild("HumanoidRootPart") ~= nil and newplr.Name ~= plr.Name  and newplr.Character.Humanoid.Health > 0 then
                local ScreenPos, OnScreen = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
                if OnScreen then
                    local Scale  = newplr.Character.Head.Size.Y/2
                    local Size   = Vector3.new(2, 3, 0) * (Scale * 2)
                    local humpos = camera:WorldToViewportPoint(newplr.Character.HumanoidRootPart.Position)
                    local BL     = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(Size.X, -Size.Y, 0)).p)
                    local BR     = camera:WorldToViewportPoint((newplr.Character.HumanoidRootPart.CFrame * CFrame.new(-Size.X, -Size.Y, 0)).p)



                    Right.From = Vector2.new(TR.X, TR.Y)
                    Right.To = Vector2.new(BR.X, BR.Y)

                    Bottom.From = Vector2.new(BL.X, BL.Y)
                    Bottom.To = Vector2.new(BR.X, BR.Y)

                    if newplr.TeamColor == plr.TeamColor then
                        Bottom.Color = Color3.fromRGB(0, 255, 0)
                        Right.Color = Color3.fromRGB(0, 255, 0)
                    else 
                        Bottom.Color = Color3.fromRGB(0, 181, 226)
                        Right.Color  = Color3.fromRGB(0, 181, 226)
                    end

                    Bottom.Visible = false
                    Right.Visible  = false
                else 
                    Bottom.Visible = false
                    Right.Visible = false
                end
            else 
                Bottom.Visible = false
                Right.Visible = false
                if game.Players:FindFirstChild(newplr.Name) == nil then
                    connection:Disconnect()
                end
            end
        end)
    end
    coroutine.wrap(ESP)()
end)
CoreGui:SetCore("SendNotification",{
Title    = "ESP Updated",
Text     = "ESP Has been updated.",
Duration = 10,
})
elseif a == "u" then
if raycast == true then
raycast = false
else
raycast = true
end
elseif a == "l" then
if autoesp == false then
autoesp = true
CoreGui:SetCore("SendNotification",{
Title    = "ESP Loop",
Text     = "ESP Loop is now Enabled.",
Duration = 10,
})
else
autoesp = false
CoreGui:SetCore("SendNotification",{
Title    = "ESP Loop",
Text     = "ESP Loop is now disabled.",
Duration = 10,
})
end
end
if a == "j" then
if mouse.Target then
mouse.Target:Destroy()
end
end
if a == key then
if switch == false then
switch = true
else
switch = false
if aimatpart ~= nil then
aimatpart = nil
end
end
elseif a == teambasedswitch then
if TeamBased == true then
TeamBased = false
teambasedstatus.Text = tostring(TeamBased)
else
TeamBased = true
teambasedstatus.Text = tostring(TeamBased)
end
elseif a == aimkey then
if not aimatpart then
local maxangle = math.rad(20)
for i, plr in pairs(plrs:GetChildren()) do
if plr.Name ~= lplr.Name and plr.Character and plr.Character.Head and plr.Character.Humanoid and plr.Character.Humanoid.Health > 1 then
if TeamBased == true then
if plr.Team.Name ~= lplr.Team.Name then
local an = checkfov(plr.Character.Head)
if an < maxangle then
maxangle = an
aimatpart = plr.Character.Head
end
end
else
local an = checkfov(plr.Character.Head)
if an < maxangle then
maxangle = an
aimatpart = plr.Character.Head
end
print(plr)
end
plr.Character.Humanoid.Died:Connect(function()
if aimatpart.Parent == plr.Character or aimatpart == nil then
aimatpart = nil
end
end)
end
end
else
aimatpart = nil
end
end
end)
 
function getfovxyz (p0, p1, deg)
local x1, y1, z1 = p0:ToOrientation()
local cf = CFrame.new(p0.p, p1.p)
local x2, y2, z2 = cf:ToOrientation()
if deg then
else
return Vector3.new((x1-x2), (y1-y2), (z1-z2))
end
end
 
function getaimbotplrs()
plrsforaim = {}
for i, plr in pairs(plrs:GetChildren()) do
if plr.Character and plr.Character.Humanoid and plr.Character.Humanoid.Health > 0 and plr.Name ~= lplr.Name and plr.Character.Head then
 
if TeamBased == true then
if plr.Team.Name ~= lplr.Team.Name then
local cf = CFrame.new(game.Workspace.CurrentCamera.CFrame.p, plr.Character.Head.CFrame.p)
local r = Ray.new(cf, cf.LookVector * 10000)
local ign = {}
for i, v in pairs(plrs.LocalPlayer.Character:GetChildren()) do
if v:IsA("BasePart") then
table.insert(ign , v)
end
end
local obj = game.Workspace:FindPartOnRayWithIgnoreList(r, ign)
if obj.Parent == plr.Character and obj.Parent ~= lplr.Character then
table.insert(plrsforaim, obj)
end
end
else
local cf = CFrame.new(game.Workspace.CurrentCamera.CFrame.p, plr.Character.Head.CFrame.p)
local r = Ray.new(cf, cf.LookVector * 10000)
local ign = {}
for i, v in pairs(plrs.LocalPlayer.Character:GetChildren()) do
if v:IsA("BasePart") then
table.insert(ign , v)
end
end
local obj = game.Workspace:FindPartOnRayWithIgnoreList(r, ign)
if obj.Parent == plr.Character and obj.Parent ~= lplr.Character then
table.insert(plrsforaim, obj)
end
end
 
 
end
end
end
 
function aimat(part)
cam.CFrame = CFrame.new(cam.CFrame.p, part.CFrame.p)
end
function checkfov (part)
local fov = getfovxyz(game.Workspace.CurrentCamera.CFrame, part.CFrame)
local angle = math.abs(fov.X) + math.abs(fov.Y)
return angle
end
 
game:GetService("RunService").RenderStepped:Connect(function()
if aimatpart then
aimat(aimatpart)
if aimatpart.Parent == plrs.LocalPlayer.Character then
aimatpart = nil
end
end
 
 
if raycast == true and switch == false and not aimatpart then
getaimbotplrs()
aimatpart = nil
local maxangle = 999
for i, v in ipairs(plrsforaim) do
if v.Parent ~= lplr.Character then
local an = checkfov(v)
if an < maxangle and v ~= lplr.Character.Head then
maxangle = an
aimatpart = v
print(v:GetFullName())
v.Parent.Humanoid.Died:connect(function()
aimatpart = nil
end)
end
end
end
 
end
end)
delay(0, function()
while wait(espupdatetime) do
if autoesp == true then
pcall(function()
f.addesp()
end)
end
end
end)
